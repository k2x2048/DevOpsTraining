version: '3.8'

services:

  # traefik Reverse proxy
  reverse-proxy:
    #labels:
      #- "traefik.enable=true"
      #- "traefik.http.routers.traefik=true"
      #- "traefik.http.routers.api.rule=Host(`traefik.${DOMAIN}`)"
      #- "traefik.http.routers.api.tls.certresolver=certificato"
      #- "traefik.http.routers.api.tls.domains[0].main=*.${DOMAIN}"
      #- "traefik.http.routers.api.service=api@internal"
    # The official v2 Traefik docker image
    image: traefik:v2.9
    container_name: container_traefik   
    command:
      #- "--log.level=DEBUG"
      - "--api.insecure=true"
      # Enabling docker provider
      - "--providers.docker=true"
      # Do not expose containers unless explicitly told so
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      #- "--entrypoints.websecure.address=:443" # new
      #- "--certificatesresolvers.myresolver.acme.tlschallenge=true" # new
      #- "--certificatesresolvers.myresolver.acme.email=your@email.com" # new
      #- "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json" # new
    ports:
      # The HTTP port
      - "80:80"
      #- "443:443"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
      # static conf
      - ./traefik/traefik.yml:/etc/traefik/traefik.yml:ro
      # dynamic conf
      - ./traefik/tls.yml:/etc/traefik/tls.yml:ro
      # self-signed certificate
      - ./traefik/certs:/etc/certs:ro
      # htpasswd
      - ./traefik/users_credentials:/users_credentials:ro
    depends_on:
      - mysql_server
      - wordpress
      - drupal
    restart: unless-stopped
    
  whoami:
    labels:
      # Explicitly tell Traefik to expose this container
      - "traefik.enable=true"
      # The domain the service will respond to
      - "traefik.http.routers.whoami.rule=Host(`whoami.localhost`)"
    image: "traefik/whoami"
    container_name: "container_whoami"
    restart: unless-stopped
    
  # nginx Webserver
  webserver:
    labels:
      # Explicitly tell Traefik to expose this container
      - "traefik.enable=true"
      # The domain the service will respond to
      - "traefik.http.routers.webserver.rule=Host(`localhost`)"
      #TSL
      #- "traefik.http.routers.webserver.tls=true"
      #- "traefik/http.routers.webserver.tls.tls.domains[0].main=www.localhost"
      #- "traefik/http.routers.webserver.tls.tls.domains[0].sans=www-*.localhost"
    image: nginx
    container_name: container_nginx_webserver
    ports:
      - "81:80"
      #- "443:443"
    environment:
      - NGINX_HOST=localhost
      - NGINX_PORT=80
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/data-web:/usr/share/nginx/html
      - /var/run/docker.sock:/tmp/docker.sock:ro
      #- /var/docker/nginx/certs:/etc/nginx/certs
      #- /var/docker/nginx/vhost:/etc/nginx/vhost.d
    restart: unless-stopped
  
  
  # MySQL Server
  mysql_server:
    labels:
      # Explicitly tell Traefik to expose this container
      - "traefik.enable=true"
      # The domain the service will respond to
      - "traefik.http.routers.mysql_server.rule=Host(`mysql.localhost`)"
      #TSL
      #- "traefik.http.routers.mysql_server.tls=true"
      #- "traefik/http.routers.mysql_server.tls.tls.domains[0].main=mysql.localhost"
      #- "traefik/http.routers.mysql_server.tls.tls.domains[0].sans=mysql-*.localhost"
    image: mysql
    container_name: container_mysql
    #command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: user
      MYSQL_PASSWORD: user
    volumes:
      #databse
      - ./mysql/data-db:/var/lib/mysql
      #init database
      - ./mysql/init:/docker-entrypoint-initdb.d
    restart: unless-stopped


  # MySQL administration tool
  adminer:
    labels:
      # Explicitly tell Traefik to expose this container
      - "traefik.enable=true"
      # The domain the service will respond to
      - "traefik.http.routers.adminer.rule=Host(`adminer.localhost`)"
      #TSL
      #- "traefik.http.routers.adminer.tls=true"
      #- "traefik/http.routers.adminer.tls.tls.domains[0].main=adminer.localhost"
      #- "traefik/http.routers.adminer.tls.tls.domains[0].sans=adminer-*.localhost"
    image: adminer
    container_name: container_adminer
    ports:
      - "8083:8080"
    depends_on:
      - mysql_server
    restart: unless-stopped


  # Wordpress
  wordpress:
    labels:
      # Explicitly tell Traefik to expose this container
      - "traefik.enable=true"
      # The domain the service will respond to
      - "traefik.http.routers.wordpress.rule=Host(`wordpress.localhost`)"
      #TSL
      #- "traefik.http.routers.wordpress.tls=true"
      #- "traefik/http.routers.wordpress.tls.tls.domains[0].main=wordpress.localhost"
      #- "traefik/http.routers.wordpress.tls.tls.domains[0].sans=wordpress-*.localhost"
    image: wordpress
    container_name: container_wordpress
    environment:
      WORDPRESS_DB_HOST: mysql_server
      WORDPRESS_DB_USER: wordpress_user
      WORDPRESS_DB_PASSWORD: wordpress_pw
      WORDPRESS_DB_NAME: wordpress_db
    ports:
      - "8082:80"
    volumes:
      - ./wordpress/data-web:/var/www/html
    depends_on:
      - mysql_server
    restart: unless-stopped

  # Drupal
  drupal:
    labels:
      # Explicitly tell Traefik to expose this container
      - "traefik.enable=true"
      # The domain the service will respond to
      - "traefik.http.routers.drupal.rule=Host(`drupal.localhost`)"
      #TSL
      #- "traefik.http.routers.drupal.tls=true"
      #- "traefik/http.routers.drupal.tls.tls.domains[0].main=drupal.localhost"
      #- "traefik/http.routers.drupal.tls.tls.domains[0].sans=drupal-*.localhost"
    image: drupal
    container_name: container_drupal
    environment:
      DRUPAL_DB_HOST: mysql_server
      DRUPAL_DB_USER: drupal_user
      DRUPAL_DB_PASSWORD: drupal_pw
      DRUPAL_DB_NAME: drupal_db
    volumes:
      - ./drupal/data-web/modules:/var/www/html/modules
      - ./drupal/data-web/profiles:/var/www/html/profiles
      - ./drupal/data-web/themes:/var/www/html/themes
      - ./drupal/data-web/sites:/var/www/html/sites
    ports:
      - "8081:80"
    depends_on:
      - mysql_server
    restart: unless-stopped

volumes:
   db_data:

