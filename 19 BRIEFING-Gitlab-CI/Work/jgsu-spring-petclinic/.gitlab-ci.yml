image: docker:latest
services:
  - docker:dind

stages:
  - unit test
  - build
  - test
  - release
  - deploy

build:docker-image:
  stage: build
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE" .
    - docker push "$CI_REGISTRY_IMAGE"
  only:
    - master

deploy:docker-image:
  stage: deploy
  variables:
    DOCKER_HOST: "ssh://deploy@$DOCKER_HOST_IP"
  before_script:
    # Configure SSH
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | ssh-add -
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    # Configure Docker
    - apk add docker-compose
    - docker login registry.gitlab.com -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD"
  script:
    - docker-compose pull
    - docker-compose up -d --force-recreate
  after_script:
    - docker logout registry.gitlab.com
  only:
    - master




    #Â ********************************************************************

build-job:
  stage: build
  script:
    - echo "Hello, $GITLAB_USER_LOGIN!"
    

test-job1:
  stage: test
  script:
    - echo "This job tests something"

test-job2:
  stage: test
  script:
    - echo "This job tests something, but takes more time than test-job1."
    - echo "After the echo commands complete, it runs the sleep command for 20 seconds"
    - echo "which simulates a test that runs 20 seconds longer than test-job1"
    - sleep 20

deploy-prod:
  stage: deploy
  script:
    - echo "This job deploys something from the $CI_COMMIT_BRANCH branch."
  environment: production

